import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class MainPage {
    private JPanel contentPane;
    private JRadioButton architectRadioButton;
    private JRadioButton civilEngineerRadioButton;
    private JRadioButton contractorRadioButton;
    private JRadioButton developerRadioButton;
    private JRadioButton interiorDesignerRadioButton;
    private JRadioButton electricalEngineerRadioButton;
    private JRadioButton mechanicalEngineerRadioButton;
    private JRadioButton tradeBuyerRadioButton;
    private JRadioButton othersRadioButton;
    private JPanel header;
    private JPanel profession;
    private JPanel contactDetails;
    private JPanel body;
    private JPanel purpose;
    private JPanel how;
    private JPanel buttonsPane;
    private JPanel leftBody;
    private JPanel rightBody;
    private JTextField textField1;
    private JTextField textField2;
    private JTextField textField3;
    private JTextField textField4;
    private JTextField textField5;
    private JTextField textField6;
    private JCheckBox checkBox1;
    private JCheckBox checkBox2;
    private JCheckBox checkBox3;
    private JCheckBox checkBox4;
    private JCheckBox checkBox5;
    private JCheckBox checkBox6;
    private JCheckBox checkBox7;
    private JCheckBox checkBox8;
    private JCheckBox checkBox9;
    private JCheckBox checkBox10;
    private JCheckBox checkBox11;
    private JCheckBox checkBox12;
    private JButton button1;
    private JButton button2;
    private JLabel logoHolder;

    private void createUIComponents() {

        BufferedImage image = null;
        try {
            image = ImageIO.read(new File("C:\\Users\\ljda0\\IdeaProjects\\CebuCon_Reg\\src\\favicon.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }


        image = resize(image, 30, 30);
        logoHolder.setIcon(new ImageIcon(image));

        contentPane.setLayout(new GridLayout(3, 1));
        profession.setLayout(new GridLayout(2, 1));
    }

    public JPanel setContent() {
        return contentPane;
    }

    public static BufferedImage resize(BufferedImage img, int newWidth, int newHeight) {
        BufferedImage scaled = new BufferedImage(newWidth, newHeight, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = scaled.createGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2d.drawImage(img, 0, 0, newWidth, newHeight, null);
        return scaled;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane.setLayout(new GridBagLayout());
        contentPane.putClientProperty("html.disable", Boolean.TRUE);
        header.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        header.setBackground(new Color(-16777216));
        header.setName("header");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        contentPane.add(header, gbc);
        logoHolder = new JLabel();
        logoHolder.setEnabled(true);
        logoHolder.setIcon(new ImageIcon(getClass().getResource("/favicon.png")));
        logoHolder.setText("");
        header.add(logoHolder);
        final JLabel label1 = new JLabel();
        label1.setEnabled(true);
        Font label1Font = this.$$$getFont$$$("Noto Sans", Font.BOLD, 18, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-1));
        label1.setText("CebuCON: Construction Show Cebu");
        header.add(label1);
        profession.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        profession.setBackground(new Color(-4407616));
        profession.setFocusCycleRoot(true);
        profession.setOpaque(true);
        profession.putClientProperty("html.disable", Boolean.FALSE);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        contentPane.add(profession, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.setOpaque(false);
        profession.add(panel1);
        final JLabel label2 = new JLabel();
        label2.setEnabled(true);
        Font label2Font = this.$$$getFont$$$("Noto Sans", Font.BOLD, 21, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-16777216));
        label2.setText("Profession");
        panel1.add(label2);
        architectRadioButton = new JRadioButton();
        Font architectRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, architectRadioButton.getFont());
        if (architectRadioButtonFont != null) architectRadioButton.setFont(architectRadioButtonFont);
        architectRadioButton.setForeground(new Color(-16777216));
        architectRadioButton.setOpaque(false);
        architectRadioButton.setText("Architect");
        panel1.add(architectRadioButton);
        civilEngineerRadioButton = new JRadioButton();
        Font civilEngineerRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, civilEngineerRadioButton.getFont());
        if (civilEngineerRadioButtonFont != null) civilEngineerRadioButton.setFont(civilEngineerRadioButtonFont);
        civilEngineerRadioButton.setForeground(new Color(-16777216));
        civilEngineerRadioButton.setOpaque(false);
        civilEngineerRadioButton.setText("Civil Engineer");
        panel1.add(civilEngineerRadioButton);
        contractorRadioButton = new JRadioButton();
        Font contractorRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, contractorRadioButton.getFont());
        if (contractorRadioButtonFont != null) contractorRadioButton.setFont(contractorRadioButtonFont);
        contractorRadioButton.setForeground(new Color(-16777216));
        contractorRadioButton.setOpaque(false);
        contractorRadioButton.setText("Contractor");
        panel1.add(contractorRadioButton);
        developerRadioButton = new JRadioButton();
        Font developerRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, developerRadioButton.getFont());
        if (developerRadioButtonFont != null) developerRadioButton.setFont(developerRadioButtonFont);
        developerRadioButton.setForeground(new Color(-16777216));
        developerRadioButton.setOpaque(false);
        developerRadioButton.setText("Developer");
        panel1.add(developerRadioButton);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.setDoubleBuffered(true);
        panel2.setEnabled(true);
        panel2.setOpaque(false);
        profession.add(panel2);
        electricalEngineerRadioButton = new JRadioButton();
        Font electricalEngineerRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, electricalEngineerRadioButton.getFont());
        if (electricalEngineerRadioButtonFont != null)
            electricalEngineerRadioButton.setFont(electricalEngineerRadioButtonFont);
        electricalEngineerRadioButton.setForeground(new Color(-16777216));
        electricalEngineerRadioButton.setOpaque(false);
        electricalEngineerRadioButton.setText("Electrical Engineer");
        panel2.add(electricalEngineerRadioButton);
        mechanicalEngineerRadioButton = new JRadioButton();
        Font mechanicalEngineerRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, mechanicalEngineerRadioButton.getFont());
        if (mechanicalEngineerRadioButtonFont != null)
            mechanicalEngineerRadioButton.setFont(mechanicalEngineerRadioButtonFont);
        mechanicalEngineerRadioButton.setForeground(new Color(-16777216));
        mechanicalEngineerRadioButton.setOpaque(false);
        mechanicalEngineerRadioButton.setText("Mechanical Engineer");
        panel2.add(mechanicalEngineerRadioButton);
        tradeBuyerRadioButton = new JRadioButton();
        Font tradeBuyerRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, tradeBuyerRadioButton.getFont());
        if (tradeBuyerRadioButtonFont != null) tradeBuyerRadioButton.setFont(tradeBuyerRadioButtonFont);
        tradeBuyerRadioButton.setForeground(new Color(-16777216));
        tradeBuyerRadioButton.setOpaque(false);
        tradeBuyerRadioButton.setText("Trade Buyer");
        panel2.add(tradeBuyerRadioButton);
        othersRadioButton = new JRadioButton();
        Font othersRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, othersRadioButton.getFont());
        if (othersRadioButtonFont != null) othersRadioButton.setFont(othersRadioButtonFont);
        othersRadioButton.setForeground(new Color(-16777216));
        othersRadioButton.setOpaque(false);
        othersRadioButton.setText("Others");
        panel2.add(othersRadioButton);
        interiorDesignerRadioButton = new JRadioButton();
        Font interiorDesignerRadioButtonFont = this.$$$getFont$$$("Noto Sans", Font.BOLD, 24, interiorDesignerRadioButton.getFont());
        if (interiorDesignerRadioButtonFont != null)
            interiorDesignerRadioButton.setFont(interiorDesignerRadioButtonFont);
        interiorDesignerRadioButton.setForeground(new Color(-16777216));
        interiorDesignerRadioButton.setOpaque(false);
        interiorDesignerRadioButton.setText("Interior Designer");
        panel2.add(interiorDesignerRadioButton);
        body = new JPanel();
        body.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        contentPane.add(body, gbc);
        leftBody = new JPanel();
        leftBody.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        body.add(leftBody);
        contactDetails.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        leftBody.add(contactDetails);
        final JLabel label3 = new JLabel();
        label3.setText("Label");
        contactDetails.add(label3);
        final JLabel label4 = new JLabel();
        label4.setText("Label");
        contactDetails.add(label4);
        textField1 = new JTextField();
        contactDetails.add(textField1);
        final JLabel label5 = new JLabel();
        label5.setText("Label");
        contactDetails.add(label5);
        textField2 = new JTextField();
        contactDetails.add(textField2);
        final JLabel label6 = new JLabel();
        label6.setText("Label");
        contactDetails.add(label6);
        textField3 = new JTextField();
        contactDetails.add(textField3);
        final JLabel label7 = new JLabel();
        label7.setText("Label");
        contactDetails.add(label7);
        textField4 = new JTextField();
        contactDetails.add(textField4);
        final JLabel label8 = new JLabel();
        label8.setText("Label");
        contactDetails.add(label8);
        textField5 = new JTextField();
        contactDetails.add(textField5);
        final JLabel label9 = new JLabel();
        label9.setText("Label");
        contactDetails.add(label9);
        textField6 = new JTextField();
        contactDetails.add(textField6);
        rightBody = new JPanel();
        rightBody.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        body.add(rightBody);
        purpose = new JPanel();
        purpose.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        rightBody.add(purpose);
        final JLabel label10 = new JLabel();
        label10.setText("Label");
        purpose.add(label10);
        checkBox1 = new JCheckBox();
        checkBox1.setText("CheckBox");
        purpose.add(checkBox1);
        checkBox2 = new JCheckBox();
        checkBox2.setText("CheckBox");
        purpose.add(checkBox2);
        checkBox3 = new JCheckBox();
        checkBox3.setText("CheckBox");
        purpose.add(checkBox3);
        checkBox4 = new JCheckBox();
        checkBox4.setText("CheckBox");
        purpose.add(checkBox4);
        final JLabel label11 = new JLabel();
        label11.setText("Label");
        purpose.add(label11);
        checkBox5 = new JCheckBox();
        checkBox5.setText("CheckBox");
        purpose.add(checkBox5);
        how = new JPanel();
        how.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        rightBody.add(how);
        final JLabel label12 = new JLabel();
        label12.setText("Label");
        how.add(label12);
        checkBox6 = new JCheckBox();
        checkBox6.setText("CheckBox");
        how.add(checkBox6);
        checkBox7 = new JCheckBox();
        checkBox7.setText("CheckBox");
        how.add(checkBox7);
        checkBox8 = new JCheckBox();
        checkBox8.setText("CheckBox");
        how.add(checkBox8);
        checkBox9 = new JCheckBox();
        checkBox9.setText("CheckBox");
        how.add(checkBox9);
        checkBox10 = new JCheckBox();
        checkBox10.setText("CheckBox");
        how.add(checkBox10);
        checkBox11 = new JCheckBox();
        checkBox11.setText("CheckBox");
        how.add(checkBox11);
        checkBox12 = new JCheckBox();
        checkBox12.setText("CheckBox");
        how.add(checkBox12);
        buttonsPane = new JPanel();
        buttonsPane.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        rightBody.add(buttonsPane);
        button1 = new JButton();
        button1.setText("Button");
        buttonsPane.add(button1);
        button2 = new JButton();
        button2.setText("Button");
        buttonsPane.add(button2);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
